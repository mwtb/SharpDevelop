<?xml version="1.0" encoding="utf-8"?>
<UserControl
	x:Class="Debugger.AddIn.Pads.Controls.WatchList" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:localControls="clr-namespace:Debugger.AddIn.Pads.Controls" xmlns:core="http://icsharpcode.net/sharpdevelop/core"
	DataContext="{Binding RelativeSource={RelativeSource Self}}"
	x:Name="ControlList"
	Background="White">
	<UserControl.Resources>
		<localControls:BoolToVisibilityConverter
			x:Key="boolToVisibility" />		
		<localControls:TreeListViewConverter
			x:Key="TreeListViewConverter" />
		
		<Style
			x:Key="BorderStyle"
			TargetType="Border">
			<Setter
				Property="BorderBrush"
				Value="LightGray" />
			<Setter
				Property="BorderThickness"
				Value="1,0,1,1"></Setter>
			<Setter
				Property="VerticalAlignment"
				Value="Center" />
			<Setter
				Property="HorizontalAlignment"
				Value="Stretch" />
		</Style>
		<Style
			TargetType="{x:Type TextBox}"
			x:Key="TextBoxValueStyle">
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Background" Value="White"/>
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter
				Property="Visibility">
				<Setter.Value>
					<MultiBinding
						Converter="{StaticResource boolToVisibility}"
						ConverterParameter="True">
						<Binding
							Path="CanSetText" />
						<Binding
							Path="IsSelected"
							RelativeSource="{RelativeSource AncestorType=TreeViewItem}" />
					</MultiBinding>
				</Setter.Value>
			</Setter>
		</Style>
		<Style
			TargetType="{x:Type TextBlock}"
			x:Key="TextBlockValueStyle">
			<Setter
				Property="VerticalAlignment"
				Value="Center" />
			<Setter
				Property="Visibility">
				<Setter.Value>
					<MultiBinding
						Converter="{StaticResource boolToVisibility}"
						ConverterParameter="False">
						<Binding
							Path="CanSetText" />
						<Binding
							Path="IsSelected"
							RelativeSource="{RelativeSource AncestorType=TreeViewItem}" />
					</MultiBinding>
				</Setter.Value>
			</Setter>
		</Style>
		<Style
			x:Key="ExpandToggleStyle"
			TargetType="{x:Type ToggleButton}">
			<Setter
				Property="Focusable"
				Value="False" />
			<Setter
				Property="Template">
				<Setter.Value>
					<ControlTemplate
						TargetType="ToggleButton">
						<Grid
							Width="21"
							Height="16">
							<Path
								x:Name="ExpandPath"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Margin="5,0,1,1"
								Stroke="Black"
								Fill="Transparent"
								Data="M 4 0 L 8 4 L 4 8 Z" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger
								Property="IsChecked"
								Value="True">
								<Setter
									Property="Data"
									TargetName="ExpandPath"
									Value="M 0 4 L 8 4 L 4 8 Z" />
								<Setter
									TargetName="ExpandPath"
									Property="Fill"
									Value="Black" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- TreeViewItem-->
		<ControlTemplate
			TargetType="TreeViewItem"
			x:Key="TreeListViewItem">
			<StackPanel>
				<Border
					Style="{StaticResource BorderStyle}"
					x:Name="Border">
					<GridViewRowPresenter
						Content="{TemplateBinding Header}"
						Columns="{Binding Columns,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=localControls:TreeListView}}" />
				</Border>
				<ItemsPresenter
					x:Name="ItemsPresenter"
					Visibility="Collapsed" />
			</StackPanel>
			<ControlTemplate.Triggers>
				<Trigger
					Property="IsExpanded"
					Value="True">
					<Setter
						TargetName="ItemsPresenter"
						Property="Visibility"
						Value="Visible" />
				</Trigger>
				<Trigger
					Property="IsSelected"
					Value="true">
					<Setter
						TargetName="Border"
						Property="Background"
						Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
					<Setter
						Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition
							Property="IsSelected"
							Value="true" />
						<Condition
							Property="IsSelectionActive"
							Value="false" />
					</MultiTrigger.Conditions>
					<Setter
						TargetName="Border"
						Property="Background"
						Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
					<Setter
						Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				</MultiTrigger>
				<Trigger
					Property="IsEnabled"
					Value="false">
					<Setter
						Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<!--TreeListViewExpander-->
		<ControlTemplate
			TargetType="{x:Type localControls:TreeListViewExpander}"
			x:Key="TreeListViewExpander">
			<StackPanel
				Orientation="Horizontal"
				x:Name="ContainerElement">
				<FrameworkElement
					Width="{Binding RelativeSource={x:Static RelativeSource.Self},Converter={StaticResource TreeListViewConverter}}" />
				<ToggleButton
					Style="{StaticResource ExpandToggleStyle}"
					IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeViewItem}}" />
			</StackPanel>
		</ControlTemplate>
		<!--TreeListView-->
		<Style
			TargetType="{x:Type localControls:TreeListView}">
			<Setter
				Property="Template">
				<Setter.Value>
					<ControlTemplate
						TargetType="{x:Type localControls:TreeListView}">
						<ControlTemplate.Resources>
							<Style
								TargetType="TreeViewItem">
								<Setter
									Property="Template"
									Value="{StaticResource TreeListViewItem}" />
							</Style>
							<Style
								TargetType="localControls:TreeListViewExpander">
								<Setter
									Property="Template"
									Value="{StaticResource TreeListViewExpander}" />
							</Style>
						</ControlTemplate.Resources>
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<ScrollViewer
								HorizontalScrollBarVisibility="Auto"
								VerticalScrollBarVisibility="Disabled">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition
											Height="Auto" />
										<RowDefinition
											Height="*" />
									</Grid.RowDefinitions>
									<GridViewHeaderRowPresenter
										Columns="{TemplateBinding Columns}"
										AllowsColumnReorder="{TemplateBinding AllowsColumnReorder}" />
									<ScrollViewer
										HorizontalScrollBarVisibility="Disabled"
										VerticalScrollBarVisibility="Auto"
										Grid.Row="1">
										<ItemsPresenter />
									</ScrollViewer>
								</Grid>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--	Name column	-->
		<DataTemplate
			x:Key="CellTemplate_Name">
			<StackPanel
				Orientation="Horizontal">
				<localControls:TreeListViewExpander
					x:Name="Expander" />
				<Image
					MaxHeight="16"
					MaxWidth="16"
					Margin="3,0,0,0"
					Source="{Binding Path=ImageSource}"
					VerticalAlignment="Center" />
				<TextBlock
					Margin="3,0,0,0"
					MinWidth="400"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center"
					Text="{Binding Path=Name}"
					Visibility="Visible"/>
				<localControls:WatchListAutoCompleteCell
					CommandText="{Binding Path=Name, Mode=OneWay}"
					Visibility="Collapsed"
					CommandEntered="WatchListAutoCompleteCell_CommandEntered"/>
			</StackPanel>
			<DataTemplate.Triggers>
				<DataTrigger
					Binding="{Binding Path=HasChildNodes}"
					Value="False">
					<Setter
						TargetName="Expander"
						Property="Visibility"
						Value="Hidden" />
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		<!--	Value column	-->
		<DataTemplate
			x:Key="CellTemplate_Value">
			<StackPanel
				Orientation="Horizontal">
				<TextBlock
					VerticalAlignment="Center"
					MinWidth="200"
					Text="{Binding Path=Text}"
					Style="{StaticResource TextBlockValueStyle}" />
				<TextBox
					Text="{Binding Path=Text, Mode=OneWay}"
					Style="{StaticResource TextBoxValueStyle}" KeyUp="OnValueTextBoxKeyUp" />
			</StackPanel>
		</DataTemplate>
		<!-- Type column -->
		<DataTemplate
			x:Key="CellTemplate_Type">
			<TextBlock
				VerticalAlignment="Center"
				MinWidth="200"
				Text="{Binding Path=Type}" />
		</DataTemplate>
	</UserControl.Resources>
	<DockPanel>
		<localControls:TreeListView
			PreviewMouseDoubleClick="MyList_PreviewMouseDoubleClick"
			TreeViewItem.Expanded="MyList_Expanded"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			ItemsSource="{Binding Path=WatchItems}"
			x:Name="MyList">
			<localControls:TreeListView.ItemTemplate>
				<HierarchicalDataTemplate />
			</localControls:TreeListView.ItemTemplate>
			<localControls:TreeListView.Resources>
				<Style x:Key="ColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
					<Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
				</Style>
			</localControls:TreeListView.Resources>
			<localControls:TreeListView.Columns>
				<GridViewColumn
					Width="400"
					HeaderContainerStyle="{StaticResource ColumnHeaderStyle}"
					Header="{core:Localize Global.Name}"
					CellTemplate="{StaticResource CellTemplate_Name}"></GridViewColumn>
				<GridViewColumn
					Width="200"
					HeaderContainerStyle="{StaticResource ColumnHeaderStyle}"
					Header="{core:Localize Dialog.HighlightingEditor.Properties.Value}"
					CellTemplate="{StaticResource CellTemplate_Value}" />
				<GridViewColumn
					Width="200"
					HeaderContainerStyle="{StaticResource ColumnHeaderStyle}"
					Header="{core:Localize ResourceEditor.ResourceEdit.TypeColumn}"
					CellTemplate="{StaticResource CellTemplate_Type}" />
			</localControls:TreeListView.Columns>
		</localControls:TreeListView>
	</DockPanel>
</UserControl>